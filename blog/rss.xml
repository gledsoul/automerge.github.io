<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Automerge CRDT Blog</title>
        <link>https://automerge.github.io/blog/</link>
        <description>Automerge CRDT Blog</description>
        <lastBuildDate>Sat, 06 Apr 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Automerge 2.2: Rich Text]]></title>
            <link>https://automerge.github.io/blog/2024/04/06/richtext/</link>
            <guid>https://automerge.github.io/blog/2024/04/06/richtext/</guid>
            <pubDate>Sat, 06 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[We are delighted to announce the release of rich text support in Automerge, including a fully supported ProseMirror binding as the initial reference implementation. This means that you can now build collaborative applications on Automerge with realtime and asynchronous editing of rich text including inline formatting, block elements, and more.]]></description>
            <content:encoded><![CDATA[<p>We are delighted to announce the release of rich text support in Automerge, including a fully supported ProseMirror binding as the initial reference implementation. This means that you can now build collaborative applications on Automerge with realtime and asynchronous editing of rich text including inline formatting, block elements, and more.</p>
<p>If you want to get started building right away, check out the library here: <a href="https://github.com/automerge/automerge-prosemirror" target="_blank" rel="noopener noreferrer">https://github.com/automerge/automerge-prosemirror</a></p>
<p>For everyone else, let's start with a demo, before moving on to discuss what rich text is and how Automerge helps you use it.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="demo">Demo<a href="https://automerge.github.io/blog/2024/04/06/richtext/#demo" class="hash-link" aria-label="Direct link to Demo" title="Direct link to Demo">​</a></h2>
<iframe src="https://automerge.org/automerge-prosemirror" style="width:100%;resize:both;height:500px"></iframe>
<p>On its own, this should seem pretty boring: it's a rich text editor which  supports most of the features users typically expect from a rich text editor. What makes this demo interesting is the support for real time collaboration which means that we can manage concurrent changes to complex formatting, like this:</p>
<video controls="" autoplay="" loop="" style="width:100%"><source src="/img/automerge-formatting-change.webm" type="video/webm"><p>Merging formatting and structure changes in Automerge</p></video>
<p>The Automerge-ProseMirror binding is designed to be easy to integrate into any ProseMirror editor you might want to build.  To see how it works, refer to <a href="https://automerge.github.io/docs/cookbook/rich-text-prosemirror-vanilla/">the cookbook</a>, but the short story is that it takes just a few lines of code.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-is-rich-text-a-custom-datatype-in-automerge">Why is rich text a custom datatype in Automerge?<a href="https://automerge.github.io/blog/2024/04/06/richtext/#why-is-rich-text-a-custom-datatype-in-automerge" class="hash-link" aria-label="Direct link to Why is rich text a custom datatype in Automerge?" title="Direct link to Why is rich text a custom datatype in Automerge?">​</a></h2>
<p>Automerge aims to make the experience of building production-ready collaborative applications as close as possible to the ease and speed of writing a local prototype. This is why the Automerge API focuses on giving you something that feels like just modifying a local Javascript object. Automerge provides a consistent abstraction for your data so that you can focus on your users' needs and not on the finer points of storage and synchronization.</p>
<p>In this context, rich text poses a problem. As we discuss at length in our past paper, <a href="https://inkandswitch.com/peritext" target="_blank" rel="noopener noreferrer">Peritext</a>, rich text doesn't map easily on to plain-text or tree structures. Attempting to do so can lead to incorrect behaviour during a merge.</p>
<p>For a real-world example of the kind of data-loss that is difficult to avoid with traditional approaches, here's an example using the yjs prosemirror bindings:</p>
<video controls="" autoplay="" loop="" style="width:100%"><source src="/img/yjs-structure-change.webm" type="video/webm"><p>Conflicting structure changes in yjs can cause loss of text</p></video>
<p>When the edits from the two sides come together, the representation of the data requires the editor to choose between either adding a list item, or converting the list into a paragraph. In this case, the extra list item is lost (though it could have been the opposite.)</p>
<p>This kind of conflict is very rare in online editing scenarios. It only occurs when two users manage to submit conflicting structural edits concurrently. This becomes much more likely during longer sessions of offline collaboration Automerge is designed to support. Our goal is to ensure consistent and correct behaviour under all network and collaboration conditions, so for us this was an important problem.</p>
<p>Our goal has been to provide an implementation of rich-text support which allows both edits to be kept.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-it-works">How it works<a href="https://automerge.github.io/blog/2024/04/06/richtext/#how-it-works" class="hash-link" aria-label="Direct link to How it works" title="Direct link to How it works">​</a></h2>
<p>Rather than representing rich text as a tree structure like HTML, we represent it as plain text annotatedwith spans and blocks:</p>
<table><thead><tr><th></th><th>examples</th><th>behaviour</th></tr></thead><tbody><tr><td>spans</td><td>&lt;a&gt; &lt;em&gt;</td><td>overlapping</td></tr><tr><td>blocks</td><td>&lt;p&gt; &lt;li&gt;</td><td>independent</td></tr></tbody></table>
<p>The difference between the two is that text may appear in many spans, but should only ever be in a single block. A sentence may be bold <em>and</em> italic, but it cannot be simultaneously part of two paragraphs.</p>
<p>Formatting spans, originally described in <a href="https://inkandswitch.com/peritext" target="_blank" rel="noopener noreferrer">Peritext</a> are conceptually stored outside the text. A formatting span has a beginning and an end within the text sequence and a flag detailing whether the span should expand when characters are inserted at the boundaries of the span.</p>
<p>Block markers have a type - such as "ordered list item" - and parents - such as "blockquote". The parents represent the hierarchical structure of the document. Block markers are inserted into the sequence of text characters.</p>
<p>These elements map quite closely to user actions whilst editing. Typically a text editor allows you to highlight a sequence of characters and format them - regardless of whether they are in different regions of the document (try highlighting and bolding half of a list item and preceding paragraph in Google Docs for example). On the other hand, inserting a new list item is usually achieved by pressing Enter at the end of the current list item - inserting a block marker; and indenting a list item is done by pressing a button in the toolbar - inserting a new parent into the block parents.</p>
<p>Choosing operations on the underlying data structure which map well to typical actions performed while editing text means we can provide accurate representations of the difference between two versions of the text. Here's the same  structure change example in automerge</p>
<video controls="" autoplay="" loop="" style="width:100%"><source src="/img/automerge-structure-change.webm" type="video/webm"><p>Structure change in Automerge preserves edits</p></video>
<p>We plan to write a more detailed description of these algorithms (which were developed in concert with Martin Kleppmann) in a future paper.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-can-i-try-it">How can I try it?<a href="https://automerge.github.io/blog/2024/04/06/richtext/#how-can-i-try-it" class="hash-link" aria-label="Direct link to How can I try it?" title="Direct link to How can I try it?">​</a></h2>
<p>Support for rich text landed in Automerge 2.2 and you can find a writeup of the API <a href="https://automerge.github.io/docs/documents/rich_text/">here</a>. You can find several examples of how to use the Prosemirror bindings in the <a href="https://github.com/automerge/automerge-prosemirror" target="_blank" rel="noopener noreferrer">Automerge-ProseMirror</a>  repository. We've also made a <a href="https://github.com/automerge/prosemirror-quickstart" target="_blank" rel="noopener noreferrer">simple starter project</a> to a starter project you can fork. Please feel free to experiment with the playground above. If you find any behaviours that seem surprising, we'd love to hear about it. Whatever you're doing, we hope you'll join us in the <a href="https://discord.gg/TrgN9FkYSa" target="_blank" rel="noopener noreferrer">Automerge Discord</a> and let us know how you're getting on.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="commercial-support-for-automerge">Commercial Support for Automerge<a href="https://automerge.github.io/blog/2024/04/06/richtext/#commercial-support-for-automerge" class="hash-link" aria-label="Direct link to Commercial Support for Automerge" title="Direct link to Commercial Support for Automerge">​</a></h2>
<p>If you're a business building a commercial product on top of Automerge, we recommend becoming a commercial sponsor. Automerge is only available for production use thanks to our supporters and we are highly motivated to ensure their success.</p>
<p>Sponsors of the project receive ongoing support from our team, including architecture review early in a project, advice around scaling or launch issues, and extra visibility and influence into our roadmap. Sponsors also get a private Discord channel for asking questions specific to their project.</p>
<p>Email <a href="mailto:alex@inkandswitch.com" target="_blank" rel="noopener noreferrer">alex@inkandswitch.com</a> or message us in the <a href="https://discord.gg/TrgN9FkYSa" target="_blank" rel="noopener noreferrer">Automerge Discord</a> if you'd like to learn more about sponsorship and support options.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Merry Commitmas - a year-end recap of what's new in Automerge]]></title>
            <link>https://automerge.github.io/blog/2023/12/21/merry-commitmas/</link>
            <guid>https://automerge.github.io/blog/2023/12/21/merry-commitmas/</guid>
            <pubDate>Thu, 21 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Since releasing automerge-repo last month, we've been working closely with our users to improve the library based on real-world usage. One in-house project, the Tiny Essay Editor, is a Markdown editor with comment support which was used to write the latest Ink & Switch essay, Embark.]]></description>
            <content:encoded><![CDATA[<p>Since <a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/">releasing</a> automerge-repo last month, we've been working closely with our users to improve the library based on real-world usage. One in-house project, the <a href="https://github.com/inkandswitch/tiny-essay-editor" target="_blank" rel="noopener noreferrer">Tiny Essay Editor</a>, is a Markdown editor with comment support which was used to write the <a href="https://www.inkandswitch.com/embark/" target="_blank" rel="noopener noreferrer">latest Ink &amp; Switch essay, Embark</a>.</p>
<p>Like many Ink &amp; Switch essays, Embark is a large piece: the final version is over 11,000 words and 60,000 characters. The full edit history is just shy of 200,000 edits. That means the team produced roughly 3x as much text as made it into the final version. The final version of the document with the full history and all the comments included is only 376kb and takes a little under 4s to load from disk, but from then on edits are reasonably snappy: most edits take 25ms (equivalent to 30fps) from keypress to paint on my desktop.</p>
<p>There's still plenty of room to improve here. Ultimately our goal is to reliably achieve single-frame updates even on very large documents and we still have a long way to go on memory usage. Still, we thought folks might enjoy hearing a little behind-the-scenes description of what we've been up to.</p>
<p>But first, a few feature updates:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="codemirror-integration">CodeMirror Integration<a href="https://automerge.github.io/blog/2023/12/21/merry-commitmas/#codemirror-integration" class="hash-link" aria-label="Direct link to CodeMirror Integration" title="Direct link to CodeMirror Integration">​</a></h2>
<p>Tiny Essay Editor is built around the <a href="https://github.com/automerge/automerge-codemirror" target="_blank" rel="noopener noreferrer">automerge-codemirror</a> integration and uses incremental updates to make sure it stays fast even on extremely large documents. We've managed to maintain next-frame performance for most edits and document sizes, but on very large documents we still have a few stalls caused by calculating network synchronization messages to work through.</p>
<p>That said, the CodeMirror integration is stable, efficient, and works well with both the marks and cursors APIs. If you need a well-supported plaintext editor (or want a reference to write your own integration for your favorite editor) start here. ProseMirror integration is coming too, more about that after Christmas.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="updatetext-for-easy-integration">updateText for easy integration<a href="https://automerge.github.io/blog/2023/12/21/merry-commitmas/#updatetext-for-easy-integration" class="hash-link" aria-label="Direct link to updateText for easy integration" title="Direct link to updateText for easy integration">​</a></h2>
<p>By default, Automerge's text fields update by replacement, much like they would with any web form. If your application submits the full value for a field, Automerge will replace the whole value. Under the hood, Automerge's strings default to being editable, but integrating a full text editor component in your application is a lot of complication for making a simple text field editable.</p>
<p>The reason is that the interface Automerge exposes for modifying text is <code>Automerge.splice</code>, which lets you insert or delete characters at a particular index in the string. Unfortunately, browsers (and most other platforms) don't give you this information very easily; instead they just give you the whole content of the text field and you have to figure out yourself what changed.</p>
<p>Figuring out what changed between two strings is actually quite fiddly. There are algorithms you can study, such as the <a href="https://www.nathaniel.ai/myers-diff/" target="_blank" rel="noopener noreferrer">Myers diff</a>, and libraries <a href="https://www.npmjs.com/package/myers-diff" target="_blank" rel="noopener noreferrer">that implement them</a>... but we decided that it would be worthwhile to just build one into Automerge and spare you the hassle. We've therefore introduced a function <code>Automerge.updateText</code>, which looks like this:</p>
<div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> doc1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword module" style="color:#00009f">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">text</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello world!"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> doc2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">doc1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">doc2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">doc2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">/// Note we just pass the new value we want the whole field to have</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">updateText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"text"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Goodbye world!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">doc1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">doc1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">updateText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">d</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"text"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Hello friends!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/// text is now "Goodbye friends!"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> merged </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">Automerge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">merge</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">doc1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> doc2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This approach is really handy for places like form fields where a full rich-text editor would be overkill, but isn't as efficient at capturing inputs, particularly for larger documents. Let us know how it works for you!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="surfacing-sync-state">Surfacing Sync State<a href="https://automerge.github.io/blog/2023/12/21/merry-commitmas/#surfacing-sync-state" class="hash-link" aria-label="Direct link to Surfacing Sync State" title="Direct link to Surfacing Sync State">​</a></h2>
<p>As the Embark essay grew ever-larger, the team began to wonder whether they were up-to-date with each other, our storage server, and so on. We worked with them (thanks to Paul Sonnentag) to allow sync state to be forwarded among peers so that you could subscribe to the sync state of other systems. Right now TEE is just using this to confirm when changes are sent to (or received from) our storage server, particularly after editing offline, but the same infrastructure could be used to keep track of which of your devices were up-to-date, whether a collaborator had received your changes, or even to annotate a chat history. We're eager to see how you might use this. (And don't forget you can always send arbitrary messages to other peers with the ephemeral messaging API!)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="loading-faster">Loading faster<a href="https://automerge.github.io/blog/2023/12/21/merry-commitmas/#loading-faster" class="hash-link" aria-label="Direct link to Loading faster" title="Direct link to Loading faster">​</a></h2>
<p>Finally, let's wrap up with some performance work. As we described above, the Embark essay's Automerge document history got pretty large – roughly 200,000 operations, with around 1000 edit sessions (one per editor tab). This uncovered some performance problems in Automerge: when we started, loading the editor took around 40 seconds!</p>
<p>If you've ever encountered the <a href="https://github.com/automerge/automerge-perf" target="_blank" rel="noopener noreferrer">"edit trace" benchmark</a>, which is widely used to benchmark CRDT performance, this might be confusing. That benchmark is even larger. It contains around 270,000 operations and Automerge can load it in ~200ms. Why were we taking two orders of magnitude longer to load a similar-sized document?</p>
<p>Well, notice that I said loading the <em>editor</em> took 40s. In profiling this problem, we saw that the Tiny Essay Editor (TEE) created an empty Automerge document, and ran the sync protocol with our sync server to fetch the document. The sync protocol didn't send the whole document down the wire in one go – instead it would send the list of changes that the client doesn't have. In the case of the initial load, the client doesn't have <em>any</em> of the changes, and so each change was sent down the wire individually. TEE would then apply each change one after another. Applying invididual changes in this way is much slower than loading the compressed document format (which is produced by <code>Automerge.save</code>).</p>
<p>We solved this in a straightforward way: when a peer requests a document it doesn't have at all, we skip the elaborate sync protocol and simply send the whole compressed document. Future synchronizations are very fast: the peers remember their last sync state and can quickly calculate the comparison</p>
<p>Unfortunately, even loading the compressed version of this document was much slower than we expected: it was taking somewhere around 5s. That's about 5s too long.</p>
<p>Investigating where the time was being spent we spotted a few performance problems, including:</p>
<ul>
<li>Automerge stores operations internally in a B-tree, which has a vector of operations on each node. We were losing some time allocating these little vectors every time we received a new change.</li>
<li>Each node in the B-tree has an index on it, where we store things like the number of ops and the number of characters in its subtree. When loading a document we were updating these indexes for every edit in the document's history.</li>
</ul>
<p>We solved these problems by making several changes:</p>
<ol>
<li>Rather than storing the operations directly in the B-tree, we now store them in a separate table and just store indexes into this table in the B-tree. This consolidates allocations so we don't spend so much time making tiny allocations.</li>
<li>When loading a document, we wait until we've inserted every op into the B-tree before generating indexes.</li>
</ol>
<p>Putting this all together, the load time for the Embark essay is reduced to around ~4 seconds on my machine. This is still about 4s too slow but we've managed to shave the first 90% off of the loading time in this application.</p>
<h1>That's it!</h1>
<p>You can get all this good stuff by updating to Automerge 2.1.10 or later, as well as plenty of smaller improvements (like import/export) and bug fixes (like getting rid of a React hook race condition).</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Automerge-Repo: A "batteries-included" toolkit for building local-first applications]]></title>
            <link>https://automerge.github.io/blog/2023/11/06/automerge-repo/</link>
            <guid>https://automerge.github.io/blog/2023/11/06/automerge-repo/</guid>
            <pubDate>Mon, 06 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we are announcing our new library, automerge-repo, which makes it vastly easier to build local-first applications with Automerge. Take a look at our quickstart guide or read on for some background and examples.]]></description>
            <content:encoded><![CDATA[<p>Today we are announcing our new library, <a href="https://github.com/automerge/automerge-repo" target="_blank" rel="noopener noreferrer"><code>automerge-repo</code></a>, which makes it vastly easier to build local-first applications with Automerge. Take a look at our <a href="https://automerge.github.io/docs/quickstart/">quickstart guide</a> or read on for some background and examples.</p>
<p>For those new to this idea: local-first applications are a way of building software that allows both real-time collaboration (think Google Docs) and offline working (think Git). They work by storing the user's data locally, on their own device, and syncing it with collaborators in the background. You can read more about the motivation for local-first software <a href="https://inkandswitch.com/local-first/" target="_blank" rel="noopener noreferrer">in our essay</a>, or watch a <a href="https://www.youtube.com/watch?v=PHz17gwiOc8" target="_blank" rel="noopener noreferrer">talk introducing the idea</a>.</p>
<p>A challenge in local-first software is how to merge edits that were made independently on different devices, and <a href="https://crdt.tech/" target="_blank" rel="noopener noreferrer">CRDTs</a> were developed to solve this problem. Automerge is a fairly mature CRDT implementation. In fact, we wrote this blog post using it! The API is quite low-level though, and Automerge-Core has no opinion about how networking or storage should be done. Often, the first thing developers ask after discovering Automerge was how to connect it into an actual application.</p>
<p>Our new library, <code>automerge-repo</code>, extends the collaboration engine of Automerge-Core with networking and storage adapters, and provides integrations with React and other UI frameworks. You can get to building your app straight away by taking advantage of default implementations that solve common problems such as how to send binary data over a WebSocket, how often to send synchronization messages, what network format to use, or how to store data in places like the browser's IndexedDB or on the filesystem.</p>
<p>If you've been intimidated by the effort of integrating Automerge into your application because of these choices, this library is for you. Now you can simply create a repo, point it to a sync server, and get to work on your app.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="automerge-repo-a-simple-example"><code>automerge-repo</code>: a simple example<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#automerge-repo-a-simple-example" class="hash-link" aria-label="Direct link to automerge-repo-a-simple-example" title="Direct link to automerge-repo-a-simple-example">​</a></h2>
<p>Let's start by taking a look at a simple example of how <code>automerge-repo</code> works. To begin, create and configure a repository for Automerge documents.</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> repo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Repo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  storage</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">IndexedDBStorageAdapter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"automerge-demo"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  network</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">WebsocketClientNetworkAdapter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"wss://sync.automerge.org"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code in the example above creates a repository and adds a storage and network adapter to it. It tells <code>automerge-repo</code> to store all changes in an IndexedDB table called <code>automerge-demo</code> and to synchronize documents with the WebSocket server at <code>sync.automerge.org</code>. The library is designed to support a wide variety of network transports, and we include a simple client/server WebSocket adapter out of the box. Members of the community are already adding support for other transports, such as WebRTC.</p>
<p>In this example we're connecting to the public test server hosted by the Automerge team, but you can also run your own sync server. In fact, our <a href="https://github.com/automerge/automerge-repo-sync-server" target="_blank" rel="noopener noreferrer">sync server</a> runs almost the same code as above, but with a different network and storage adapter.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>The Automerge project provides a public sync server for you to experiment with <code>sync.automerge.org</code>. This is not a private instance, and as an experimental service has no reliability or data safety guarantees. Basically, it's good for demos and prototyping, but run your own sync server for production uses.</p></div></div>
<p>Next, create a document and make some changes to it:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">doc </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> doc</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hello </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"World."</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   automerge</span><span class="token operator" style="color:#393A34">:</span><span class="token plain">2j9knpCseyhnK8izDmLpGP5WMdZQ</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The code logs a URL to the document you created. On another computer, or in another browser, you could load this document using the same URL, as shown below:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"automerge:2j9knpCseyhnK8izDmLpGP5WMdZQ"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">doc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// why don't you try it and find out?</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>What's happening here to make all this work? <code>automerge-repo</code> wraps the core Automerge library and handles all the work of moving the bytes around to make your application function.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="key-concepts--basic-usage">Key Concepts &amp; Basic Usage<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#key-concepts--basic-usage" class="hash-link" aria-label="Direct link to Key Concepts &amp; Basic Usage" title="Direct link to Key Concepts &amp; Basic Usage">​</a></h2>
<p>Let's go into a bit more detail. For full documentation please see <a href="https://automerge.org/docs/repositories/" target="_blank" rel="noopener noreferrer">the docs</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="repo">Repo<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#repo" class="hash-link" aria-label="Direct link to Repo" title="Direct link to Repo">​</a></h3>
<p>Create a repo by initializing it with an optional storage plugin and any number of network adapters. These are the options for initializing a repo:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">RepoConfig</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// A unique identifier for this peer, the default is a random id</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  peerId</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PeerId</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Something which knows how to store and retrieve binary blobs</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  storage</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> StorageAdapter</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Something which knows how to send and receive sync messages</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  network</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> NetworkAdapter</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// A function which determines whether to share a document with a peer</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sharePolicy</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> SharePolicy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Don't let the usage of "peer" confuse you into thinking this is limited to peer to peer connectivity, <code>automerge-repo</code> works with both client-server and peer-to-peer network transports.</p>
<p>The main methods on Repo are <code>find(url)</code> and <code>create()</code>, both of which return a <code>DocHandle</code> you can work with.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="handle--automerge-urls">Handle &amp; Automerge URLs<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#handle--automerge-urls" class="hash-link" aria-label="Direct link to Handle &amp; Automerge URLs" title="Direct link to Handle &amp; Automerge URLs">​</a></h3>
<p>A <code>DocHandle</code> is a reference to an Automerge document that a <code>Repo</code> syncs and stores . The <code>Repo</code> instance saves any changes you make to the document and syncs with connected peers. Likewise, you can listen over the network to a <code>Repo</code> for any changes it received.</p>
<p>Each <code>DocHandle</code> has a <code>.url</code> property. This is a string which uniquely identifies a document in the form <code>automerge:&lt;base58 encoded bytes&gt;</code>. Once you have a URL you can use it to request the document from other peers.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dochandledoc-and-dochandledocsync"><code>DocHandle.doc()</code> and <code>DocHandle.docSync()</code><a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#dochandledoc-and-dochandledocsync" class="hash-link" aria-label="Direct link to dochandledoc-and-dochandledocsync" title="Direct link to dochandledoc-and-dochandledocsync">​</a></h3>
<p>These two methods return the current state of the document. <code>doc()</code> is an asynchronous method that resolves when a repository loads the document from storage or retrieves it from a peer (whichever happens first), and <code>docSync()</code> is a synchronous method that assumes the document is already available.
The examples below illustrate asynchronously loading a document or synchronously loading a document and then interacting with it:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"automerge:2j9knpCseyhnK8izDmLpGP5WMdZQ"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> doc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">doc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">doc</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Or</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"automerge:2j9knpCseyhnK8izDmLpGP5WMdZQ"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">whenReady</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">docSync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In this latter example we use <code>DocHandle.whenReady</code>, which returns a promise that the repository resolves when it loads a document from storage or fetches it from another peer in the network.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="change-and-onchange"><code>change()</code> and <code>on("change")</code><a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#change-and-onchange" class="hash-link" aria-label="Direct link to change-and-onchange" title="Direct link to change-and-onchange">​</a></h3>
<p>Use <code>DocHandle.change</code> when you modify a document.</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"automerge:2j9knpCseyhnK8izDmLpGP5WMdZQ"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">doc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">d </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> d</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">foo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bar"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>Repo</code> calls <code>DocHandle.on("change")</code> whenever the document is modified – either due to a local change or a sync message being received from another peer.</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> repo</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"automerge:4CkUej7mAYnaFMfVnffDipc4Mtvn"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">doc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> handle</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"change"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">doc</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"document changed"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"New content: "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> doc</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="integrations">Integrations<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#integrations" class="hash-link" aria-label="Direct link to Integrations" title="Direct link to Integrations">​</a></h2>
<p><code>automerge-repo</code> provides a set of primitives that you can use to build a wide range of applications. To make this easier, we have built integrations with a few common UI frameworks. You can easily add further integrations and we welcome contributions which integrate with popular frameworks!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="react-integration">React Integration<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#react-integration" class="hash-link" aria-label="Direct link to React Integration" title="Direct link to React Integration">​</a></h3>
<p><a href="https://www.npmjs.com/package/@automerge/automerge-repo-react-hooks" target="_blank" rel="noopener noreferrer"><code>@automerge/automerge-repo-react-hooks</code></a> makes it easy to use <code>automerge-repo</code> in a React application. Once you've constructed a <code>Repo</code> you can make it available to your React application using <a href="https://automerge.org/automerge-repo/variables/_automerge_automerge_repo_react_hooks.RepoContext.html" target="_blank" rel="noopener noreferrer"><code>RepoContext</code></a>. Once available, call <code>useHandle</code> to obtain a <code>DocHandle</code>:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">TodoList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">listUrl</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> AutomergeUrl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> handle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useHandle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">listUrl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// render the todolist</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note that when <code>Repo</code> receives changes over the network or registers local changes, the original Automerge document remains immutable, and any modified parts of the document get new objects. This means that you can continue to use reference equality checks you're used to for in-memory data, in places like <code>React.memo</code> or <code>useMemo</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="svelte-integration">Svelte Integration<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#svelte-integration" class="hash-link" aria-label="Direct link to Svelte Integration" title="Direct link to Svelte Integration">​</a></h3>
<p><a href="https://www.npmjs.com/package/@automerge/automerge-repo-svelte-store" target="_blank" rel="noopener noreferrer"><code>@automerge/automerge-repo-svelte-store</code></a> provides <code>setContextRepo</code> to set the <code>Repo</code> which is used by the <code>document</code> store:</p>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">lang</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">ts</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#00009f">import</span><span class="token script language-javascript"> </span><span class="token script language-javascript imports punctuation" style="color:#393A34">{</span><span class="token script language-javascript imports"> </span><span class="token script language-javascript imports dom variable" style="color:#36acaa">document</span><span class="token script language-javascript imports"> </span><span class="token script language-javascript imports punctuation" style="color:#393A34">}</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">"@automerge/automerge-repo-svelte-store"</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#00009f">import</span><span class="token script language-javascript"> </span><span class="token script language-javascript imports punctuation" style="color:#393A34">{</span><span class="token script language-javascript imports"> type </span><span class="token script language-javascript imports maybe-class-name">AutomergeUrl</span><span class="token script language-javascript imports"> </span><span class="token script language-javascript imports punctuation" style="color:#393A34">}</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">"@automerge/automerge-repo"</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#00009f">export</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword" style="color:#00009f">let</span><span class="token script language-javascript"> </span><span class="token script language-javascript literal-property property" style="color:#36acaa">documentUrl</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript maybe-class-name">AutomergeUrl</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript comment" style="color:#999988;font-style:italic">// Doc is an automerge store with a `change` method which accepts</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript comment" style="color:#999988;font-style:italic">// a standard automerge change function</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> doc </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript dom variable" style="color:#36acaa">document</span><span class="token script language-javascript operator" style="color:#393A34">&lt;</span><span class="token script language-javascript maybe-class-name">HasCount</span><span class="token script language-javascript operator" style="color:#393A34">&gt;</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">documentUrl</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> </span><span class="token script language-javascript function-variable function" style="color:#d73a49">increment</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    doc</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">change</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript parameter literal-property property" style="color:#36acaa">d</span><span class="token script language-javascript parameter operator" style="color:#393A34">:</span><span class="token script language-javascript parameter"> </span><span class="token script language-javascript parameter maybe-class-name">HasCount</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">d</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">count</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">d</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">count</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">||</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">0</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">+</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">1</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name namespace" style="color:#00a4db;opacity:0.7">on:</span><span class="token tag attr-name" style="color:#00a4db">click</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value" style="color:#e3116c">{increment}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  count is {$doc?.count || 0}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-about-x">What about &lt;X&gt;?<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#what-about-x" class="hash-link" aria-label="Direct link to What about <X>?" title="Direct link to What about <X>?">​</a></h2>
<p>We'd love to help you make automerge work in your favorite development environment! Please reach out to us on GitHub or via <a href="https://join.slack.com/t/automerge/shared_invite/zt-e4p3760n-kKh7r3KRH1YwwNfiZM8ktw" target="_blank" rel="noopener noreferrer">our Slack</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="extending-automerge-repo">Extending <code>automerge-repo</code><a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#extending-automerge-repo" class="hash-link" aria-label="Direct link to extending-automerge-repo" title="Direct link to extending-automerge-repo">​</a></h2>
<p>You can extend <code>automerge-repo</code> by writing new storage or network adapters.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="storage-adapters">Storage Adapters<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#storage-adapters" class="hash-link" aria-label="Direct link to Storage Adapters" title="Direct link to Storage Adapters">​</a></h3>
<p>A storage adapter represents some kind of backend that stores the data in a repo. Storage adapters can be implemented for any key/value store that allows you to query a range of keys with a given prefix. There is no concurrency control required (that's implemented in <code>automerge-repo</code>) so you can safely have multiple repos pointing at the same storage. For example, you could implement an adapter on top of Redis.</p>
<p>The <code>automerge-repo</code> library provides storage adapters for IndexedDB and the file system (on Node).</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="network-adapters">Network Adapters<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#network-adapters" class="hash-link" aria-label="Direct link to Network Adapters" title="Direct link to Network Adapters">​</a></h3>
<p>A network adapter represents a way of connecting to other peers. Network adapters raise events when a new peer is discovered or when a message is recieved, and implement a <code>send</code> method for transmitting messages to another peer. <code>automerge-repo</code> assumes a reliable, in-order transport for each peer; as long as you can provide this (e.g. using a TCP connection), you can implement an adapter. You could implement an adapter for <a href="https://en.wikipedia.org/wiki/Bluetooth_Low_Energy" target="_blank" rel="noopener noreferrer">BLE</a>, for example.</p>
<p>The <code>automerge-repo</code> library provides network adapters for WebSocket, MessageChannel, and BroadcastChannel.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="other-languagesplatforms">Other languages/platforms<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#other-languagesplatforms" class="hash-link" aria-label="Direct link to Other languages/platforms" title="Direct link to Other languages/platforms">​</a></h3>
<p>This release of <code>automerge-repo</code> is just for javascript. Automerge is a multi-language library though and there are efforts under way to implement <code>automerge-repo</code> on other platforms. The most mature of these is <a href="https://github.com/automerge/automerge-repo-rs" target="_blank" rel="noopener noreferrer"><code>automerge-repo-rs</code></a>. We welcome contributions and please reach out if you're starting to develop <code>automerge-repo</code> for a new platform.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="beta-quality">Beta Quality<a href="https://automerge.github.io/blog/2023/11/06/automerge-repo/#beta-quality" class="hash-link" aria-label="Direct link to Beta Quality" title="Direct link to Beta Quality">​</a></h2>
<p><code>automerge-repo</code> works pretty well – we're using it at <a href="https://www.inkandswitch.com/" target="_blank" rel="noopener noreferrer">Ink &amp; Switch</a> for a bunch of internal projects. The basic shape of the API is simple and useful, and not having to think about the plumbing makes it much, much faster to get a useful application off the ground. However, there are some performance problems we're working on:</p>
<ol>
<li>Documents with large histories (e.g. a collaboratively edited document with &gt;60,000 edits) can be slow to sync.</li>
<li>The sync protocol currently requires that a document it is syncing be loaded into memory. This means that a sync server can struggle to handle a lot of traffic on large documents.</li>
</ol>
<p>These two points mean that we're not ready to say this project is ready for production.</p>
<p>We're working hard on fixing the performance so that we <em>can</em> say this is ready for production. But if you are interested in experimenting with the library now, or if you are only going to be working with relatively small documents or low traffic sync servers then you are good to go!</p>
<p>(If you want us to get to production faster, or you have some specific requirements, please consider <a href="https://github.com/sponsors/automerge" target="_blank" rel="noopener noreferrer">sponsoring</a> Automerge development 🙂)</p>
<p>Finally, we don't want to give the impression that everything is smooth sailing. <code>automerge-repo</code> solves a bunch of the hard problems people were encountering around networking and storage. There are still plenty of other difficult problems in local first software where we don't have turnkey solutions: authentication and authorization, end-to-end encryption, schema changes, version control workflows etc. <code>automerge-repo</code> makes many things much easier, but it's a frontier out here.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Automerge 2.0]]></title>
            <link>https://automerge.github.io/blog/automerge-2/</link>
            <guid>https://automerge.github.io/blog/automerge-2/</guid>
            <pubDate>Tue, 17 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Automerge 2.0 is here and ready for production. It’s our first supported release resulting from a ground-up rewrite. The result is a production-ready CRDT with huge improvements in performance and reliability. It's available in both JavaScript and Rust, and includes TypeScript types and C bindings for use in other ecosystems. Even better, Automerge 2.0 comes with improved documentation and, for the first time, support options for production users.]]></description>
            <content:encoded><![CDATA[<p>Automerge 2.0 is here and ready for production. It’s our first supported release resulting from a ground-up rewrite. The result is a production-ready CRDT with huge improvements in performance and reliability. It's available in both JavaScript and Rust, and includes TypeScript types and C bindings for use in other ecosystems. Even better, Automerge 2.0 comes with improved documentation and, for the first time, support options for production users.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="automerge-crdts-and-local-first-software">Automerge, CRDTs, and Local-first Software<a href="https://automerge.github.io/blog/automerge-2/#automerge-crdts-and-local-first-software" class="hash-link" aria-label="Direct link to Automerge, CRDTs, and Local-first Software" title="Direct link to Automerge, CRDTs, and Local-first Software">​</a></h2>
<p>Before getting into the details of why we're excited about Automerge 2.0, let's take a bit of time to explain what Automerge is for anyone unfamiliar with the project.</p>
<p>Automerge is a <a href="https://crdt.tech/" target="_blank" rel="noopener noreferrer">CRDT</a>, or "conflict-free replicated data type", but if you're allergic to buzzwords you can just think of it as a version controlled data structure. Automerge lets you record changes made to data and then replay them in other places, reliably producing the same result in each. It supports JSON-like data, including arbitrarily nested maps and arrays, as well as some more advanced data types such as text and numeric counters.</p>
<p>This is useful for quite a few reasons: you can use it to implement real-time collaboration for an application without having to figure out tricky application-specific algorithms on the server. You can also use it to better support offline work. We think it has even more potential than just that.</p>
<p>Since the rise of the cloud, developers have largely had to choose between building cloud software or traditional installed software. Although installed software has some reliability and performance benefits, cloud software has dominated the market. Cloud software makes sharing data between users easy and includes ubiquitous access from any computing device. Unfortunately, the advantages of cloud software come at a high price. Cloud software is fragile and prone to outages, rarely supports offline use, and is expensive to scale to large audiences.</p>
<p>At Ink &amp; Switch, we’ve been researching a model for developing software which we call <a href="https://www.inkandswitch.com/local-first/" target="_blank" rel="noopener noreferrer">local-first software</a>, with the goal of combining the best of both worlds: reliable, locally-executed software paired with scalable offline-friendly collaboration infrastructure. We believe that a strong data model based on recording change over time for every application should be a cornerstone of that effort.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="automerge-rs-rebuilt-for-performance--portability">Automerge-RS: Rebuilt for Performance &amp; Portability<a href="https://automerge.github.io/blog/automerge-2/#automerge-rs-rebuilt-for-performance--portability" class="hash-link" aria-label="Direct link to Automerge-RS: Rebuilt for Performance &amp; Portability" title="Direct link to Automerge-RS: Rebuilt for Performance &amp; Portability">​</a></h2>
<p>Earlier versions of Automerge were implemented in pure JavaScript. Our initial implementations were theoretically sound but much too slow and used too much memory for most production use cases.</p>
<p>Furthermore, JavaScript support on mobile devices and embedded systems is limited. We wanted a fast and efficient version of Automerge that was available everywhere: in the browser, on any mobile device, and even microcontrollers like the <a href="https://en.wikipedia.org/wiki/ESP32" target="_blank" rel="noopener noreferrer">ESP32</a>.</p>
<p>Instead of trying to coordinate multiple distinct versions of Automerge, we decided to rewrite Automerge in Rust and use platform-specific wrappers to make it available in each language ecosystem. This way we can be confident that the core CRDT logic is identical across all platforms and that everyone benefits from new features and optimizations together.</p>
<p>For JavaScript applications, this means compiling the Rust to WebAssembly and providing a JavaScript wrapper that maintains the existing Automerge API. Rust applications can obviously use the library directly, and we're making sure that it's as easy as possible to implement support in other languages with well-designed traits and a comprehensive set of C bindings.</p>
<p>To deliver this new version, lab members Alex Good and Orion Henry teamed up with open source collaborators including Andrew Jeffery and Jason Kankiewicz to polish and optimize the Rust implementation and JavaScript wrapper. The result is a codebase that is hundreds of times faster than past releases, radically more memory efficient, better tested, and more reliable.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="documenting-automerge">Documenting Automerge<a href="https://automerge.github.io/blog/automerge-2/#documenting-automerge" class="hash-link" aria-label="Direct link to Documenting Automerge" title="Direct link to Documenting Automerge">​</a></h2>
<p>With Automerge 2.0 we've made a big investment in improving documentation. In addition to <a href="https://github.com/automerge/automerge-rs/tree/main/javascript/examples" target="_blank" rel="noopener noreferrer">sample code</a>, we now have a <a href="https://automerge.org/docs/quickstart/" target="_blank" rel="noopener noreferrer">quick-start guide</a> that supports both Vite and create-react-app, as well as <a href="https://automerge.org/docs/how-it-works/backend/" target="_blank" rel="noopener noreferrer">internals</a> documentation, <a href="https://alexjg.github.io/automerge-storage-docs/" target="_blank" rel="noopener noreferrer">file format</a> and <a href="https://automerge.org/docs/how-it-works/sync/" target="_blank" rel="noopener noreferrer">sync protocol</a> documentation. This work was led by lab alumnus Rae McKelvey and we hope it helps make getting started with Automerge much easier. Please let us know if there are other topics or areas you'd like to see covered!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="supporting-automerge">Supporting Automerge<a href="https://automerge.github.io/blog/automerge-2/#supporting-automerge" class="hash-link" aria-label="Direct link to Supporting Automerge" title="Direct link to Supporting Automerge">​</a></h2>
<p>Those who have been following Automerge for a while may have noticed that we describe Automerge 2.0 as our first <em>supported</em> release. That’s because as part of the Automerge 2.0 release we’ve brought Alex Good onto the team full-time to provide support to external users, handle documentation, release management, and—of course—to continue implementing new Automerge features for the community.</p>
<p>This is a big moment for Ink &amp; Switch and the Automerge project: we’re now able to provide support to our users thanks to sponsorship from enterprises like <a href="https://fly.io/" target="_blank" rel="noopener noreferrer">Fly.io</a>, <a href="https://www.prisma.io/" target="_blank" rel="noopener noreferrer">Prisma</a>, and <a href="https://bowtie.works/" target="_blank" rel="noopener noreferrer">Bowtie</a> as well as so many others who have contributed either directly to Automerge or through supporting Martin Kleppmann on Patreon.</p>
<p>If your business is interested in sponsoring Automerge, you can <a href="https://github.com/sponsors/automerge" target="_blank" rel="noopener noreferrer">sponsor us directly</a>, or <a href="mailto:hello@inkandswitch.com" target="_blank" rel="noopener noreferrer">get in touch with us for more information or other sponsorship methods</a>. Every little bit helps, and the more sponsors we have, the more work we can do while still remaining an independent open source project.</p>
<blockquote>
<p>At Bowtie we support Automerge because it's the best way to achieve the resilliency properties that we're delivering to globally distributed private networks. It's clear to me that our sponsorship has furthered our software, and that this crew are among the best distributed-systems thinkers in the business.
-- Issac Kelly, CTO, Bowtie.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="performance-speed-memory-and-disk">Performance: Speed, Memory and Disk<a href="https://automerge.github.io/blog/automerge-2/#performance-speed-memory-and-disk" class="hash-link" aria-label="Direct link to Performance: Speed, Memory and Disk" title="Direct link to Performance: Speed, Memory and Disk">​</a></h2>
<p>Using a CRDT inherently comes with overhead: we have to track additional information in order to be able to correctly merge work from different sources. The goal of all CRDT authors is to find the right trade-offs between preserving useful history, reducing CPU overhead, and efficiently storing data in memory and on disk.</p>
<p>With the Automerge project, our goal is to retain the full history of any document and allow an author to reconstruct any point in time on demand. As software developers we're accustomed to having this power: it's hard to imagine version control without history.</p>
<p>With Automerge 2.0, we've brought together an efficient binary data format with fast updates, save, and load performance. Without getting too into the details, we accomplish this by packing data efficiently in memory, ensuring that related data is stored close together for quick retrieval.</p>
<p>Let's take a look at some numbers. One of the most challenging benchmarks for CRDTs is realtime text collaboration. That's because a long editing session can result in hundreds of thousands of individual keystrokes to record and synchronize. Martin Kleppmann recorded the keystrokes that went into writing an academic paper and replaying that data has become a <a href="https://github.com/automerge/automerge-perf" target="_blank" rel="noopener noreferrer">popular benchmark</a> for CRDTs.</p>
<table><thead><tr><th>Insert ~260k operations</th><th>Timing (ms)</th><th>Memory (bytes)</th></tr></thead><tbody><tr><td>Automerge 0.14</td><td>~500,000</td><td>~1,100,000,000</td></tr><tr><td>Automerge 1.0.1</td><td>13,052</td><td>184,721,408</td></tr><tr><td>Automerge 2.0.1</td><td>1,816</td><td>44,523,520</td></tr><tr><td>Yjs</td><td>1,074</td><td>10,141,696</td></tr><tr><td>Automerge 2.0.2-unstable</td><td>661</td><td>22,953,984</td></tr></tbody></table>
<p>Of course, even the most productive authors struggle to type an entire paper quite so quickly. Indeed, writing a paper can occur over months or even years, making both storage size on disk and load performance important as well.</p>
<table><thead><tr><th>Size on Disk</th><th>bytes</th></tr></thead><tbody><tr><td>plain text</td><td>107,121</td></tr><tr><td>automerge 2.0</td><td>129,062</td></tr><tr><td>automerge 0.14</td><td>146,406,415</td></tr></tbody></table>
<p>The binary format works wonders in this example, encoding a full history for the document with only 30% overhead. That's less than one additional byte per character! The naive JSON encoding often used circa automerge 0.14 could exceed 1,300 bytes <em>per character</em>. If you'd like to learn more about the file format, we have a <a href="https://alexjg.github.io/automerge-storage-docs/" target="_blank" rel="noopener noreferrer">specification</a> document.</p>
<table><thead><tr><th>Load ~260k operations</th><th>Timing (ms)</th></tr></thead><tbody><tr><td>Automerge 1.0.1</td><td>590</td></tr><tr><td>Automerge 2.0.1</td><td>593</td></tr><tr><td>Automerge 2.0.2-unstable</td><td>438</td></tr></tbody></table>
<p>Loading the compressed document is fast as well, ensuring the best possible start-up time.</p>
<p>While we are proud of these results, we will continue to invest in improved performance with each release as you can see with the preliminary numbers for the upcoming Automerge 2.0.2 release.</p>
<p>A few notes about methodology before we move on. The particular implementation we used to run the benchmarks can be found <a href="https://github.com/alexjg/automerge-perf-comparisons" target="_blank" rel="noopener noreferrer">here</a>. These numbers were produced on Ryzen 9 7900X. The "timing" column is how long it takes to apply every single edit in the trace, whilst the "memory" common is the peak memory usage during this process.</p>
<p>The improvements found in "2.0.2-unstable" mostly result from an upcoming improved API for text. Also note that the "automerge 1.0.1" here is actually the <code>automerge@1.0.1-preview-7</code> release. Automerge 1.0.1 was a significant rewrite from 0.14 and has a similar architecture to the Rust implementation. Improvements between 1.0.1 and 2.0.1 are a result of both optimization and adopting WebAssembly rather than an architectural change.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="portability--mobile-devices">Portability &amp; Mobile Devices<a href="https://automerge.github.io/blog/automerge-2/#portability--mobile-devices" class="hash-link" aria-label="Direct link to Portability &amp; Mobile Devices" title="Direct link to Portability &amp; Mobile Devices">​</a></h2>
<p>Because the core logic of Automerge is now built in Rust, we're able to port it more easily to a wide variety of environments and bind it to almost any language. We have users today who directly build on Automerge using the Rust APIs (and the helpful <a href="https://github.com/automerge/autosurgeon" target="_blank" rel="noopener noreferrer">autosurgeon</a> library). We also have a <a href="https://github.com/automerge/automerge-rs/tree/main/rust/automerge-c" target="_blank" rel="noopener noreferrer">C-bindings API</a> designed and contributed by Jason Kankiewicz, and are excited to see the <a href="https://github.com/automerge/automerge-go" target="_blank" rel="noopener noreferrer"><code>automerge-go</code></a> implementation underway by Conrad Irwin.</p>
<p>In the future, we hope to provide bindings for other languages including Swift, Kotlin, and Python. If you're interested in getting involved in those projects please let us know!</p>
<p>One important note is that React-Native does not support WASM today. Developers building mobile applications will need to bind directly via C. If you're interested in either working on or sponsoring work on this problem, feel free to get in touch.</p>
<h1>What’s Next</h1>
<p>With the release of Automerge 2.0 out the door, we will of course be listening closely to the community about their experience with the release, but in the months ahead, we expect to work on at least some of the following features:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="native-rich-text-support">Native Rich Text Support<a href="https://automerge.github.io/blog/automerge-2/#native-rich-text-support" class="hash-link" aria-label="Direct link to Native Rich Text Support" title="Direct link to Native Rich Text Support">​</a></h2>
<p>As with most CRDTs, Automerge originally focused on optimizing editing of plaintext. In the <a href="https://www.inkandswitch.com/peritext/" target="_blank" rel="noopener noreferrer">Peritext paper</a> by Ink &amp; Switch we discuss an algorithm for supporting rich text with good merging accuracy, and we are planning to integrate this algorithm into Automerge. Support for rich text will also make it easier to implement features like comments or cursor and selection sharing.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="automerge-repo">Automerge-Repo<a href="https://automerge.github.io/blog/automerge-2/#automerge-repo" class="hash-link" aria-label="Direct link to Automerge-Repo" title="Direct link to Automerge-Repo">​</a></h2>
<p>We’ve worked hard to keep Automerge platform-agnostic and support a wide variety of deployment environments. We don’t require a particular network stack or storage system, and Automerge has been used successfully in, client-server web applications, peer-to-peer desktop software, and as a data synchronization engine for cloud services. Unfortunately, excluding network and storage from the library has left a lot of the busy-work up to application developers, and asked them to learn a lot about distributed systems just to get started.</p>
<p>Our new library, <a href="https://github.com/automerge/automerge-repo" target="_blank" rel="noopener noreferrer">Automerge-Repo</a>, is a modular batteries-included approach to building web applications with Automerge. It works both in the browser (desktop and mobile) and in Node, and supports a variety of networking and storage adapters. There are even text editor bindings for Quill and Prosemirror as well as React Hooks to make it easy to get started quickly.</p>
<p>It's under active development, and available in beta right now. We'll talk more about it when we announce GA, but if you're starting a browser-based application now, it's probably the right place to start.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rust-developer-experience-improvements">Rust Developer Experience Improvements<a href="https://automerge.github.io/blog/automerge-2/#rust-developer-experience-improvements" class="hash-link" aria-label="Direct link to Rust Developer Experience Improvements" title="Direct link to Rust Developer Experience Improvements">​</a></h2>
<p>We've seen tremendous enthusiasm for the native Rust experience of Automerge, and the current Rust API is powerful and fast. Unfortunately, it's also low-level and can be difficult to work with directly. To make building Rust applications against automerge easier, Alex built <a href="https://github.com/automerge/autosurgeon" target="_blank" rel="noopener noreferrer">Autosurgeon</a>, a library that helps bind Rust data structures to Automerge documents, and we'll continue to listen to our Rust users and improve on that experience.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="improved-synchronization">Improved Synchronization<a href="https://automerge.github.io/blog/automerge-2/#improved-synchronization" class="hash-link" aria-label="Direct link to Improved Synchronization" title="Direct link to Improved Synchronization">​</a></h2>
<p>Automerge's current synchronization system has some great properties. In many cases it can bring two clients up to date with only a single round-trip each direction. That said, we see big potential to improve the CPU performance of this process, and also lots of opportunity to improve sync performance of many documents at once. We also expect to provide other optimizations our users and sponsors have requested, such as more efficient first-document loading, network compaction of related changes, and enabling something akin to a Git “shallow clone” for clients which don't need historical data.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="built-in-branches">Built-in Branches<a href="https://automerge.github.io/blog/automerge-2/#built-in-branches" class="hash-link" aria-label="Direct link to Built-in Branches" title="Direct link to Built-in Branches">​</a></h2>
<p>While we retain the full history of Automerge documents and provide APIs to access it, we don’t currently provide an efficient way to reconcile many closely related versions of a given document. This feature is particularly valuable for supporting offline collaboration in professional environments and (combined with Rich Text Support) should make it much easier for our friends in journalism organizations to build powerful and accurate editing tools.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="history-management">History Management<a href="https://automerge.github.io/blog/automerge-2/#history-management" class="hash-link" aria-label="Direct link to History Management" title="Direct link to History Management">​</a></h2>
<p>Today the best way to remove something from an Automerge document's history is to recreate the document from scratch or to reset to a time before that change went in. In the future, we plan to provide additional tools to give developers more control over document history. We expect this to include the ability to share just the latest version of a document (similar to a shallow clone in <code>git</code>), and to share updates that bypass changes you don't want to share (as when a developer squashes commits before publishing).</p>
<h1>Conclusion</h1>
<p>Automerge 2.0 is here, it’s ready for you, and we’re tremendously excited to share it with you. We’ve made Automerge faster, more memory efficient, and we’re bringing it to more platforms than ever. We’re adding features, making it easier to adopt, and have begun growing a team to support it. There has never been a better moment to start building local-first software: why not <a href="https://automerge.org/docs/hello/" target="_blank" rel="noopener noreferrer">give it a try</a>, and please feel welcome to <a href="https://join.slack.com/t/automerge/shared_invite/zt-e4p3760n-kKh7r3KRH1YwwNfiZM8ktw" target="_blank" rel="noopener noreferrer">join us in the Automerge Slack</a>, too.</p>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_BuS1"><p>A note to existing users: Automerge 2.0 is found on npm at <code>@automerge/automerge</code>. We have deprecated the <code>automerge</code> package.</p></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://automerge.github.io/blog/welcome/</link>
            <guid>https://automerge.github.io/blog/welcome/</guid>
            <pubDate>Wed, 05 Jan 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[You've reached the Automerge docs! We're so happy to have you.]]></description>
            <content:encoded><![CDATA[<p>You've reached the Automerge docs! We're so happy to have you.</p>
<p>We're using Docusaurus. Please help edit the docs on <a href="https://github.com/automerge/automerge.github.io" target="_blank" rel="noopener noreferrer">GitHub</a>.</p>]]></content:encoded>
            <category>hello</category>
        </item>
    </channel>
</rss>